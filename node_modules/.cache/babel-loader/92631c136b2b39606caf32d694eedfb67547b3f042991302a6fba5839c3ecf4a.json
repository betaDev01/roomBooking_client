{"ast":null,"code":"import produce from 'immer';\nimport * as actionTypes from '../../action/action-types/index';\nconst initialState = {\n  isHotelListFetching: false,\n  hotelListEror: '',\n  hotelListRespose: []\n};\nexport const commonReducer = (prevState = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.HOTEL_LIST_REQUEST:\n      return produce(prevState, nextState => {\n        nextState.isHotelListFetching = true;\n        nextState.hotelListEror = '';\n      });\n    case actionTypes.HOTEL_LIST_FAILURE:\n      return produce(prevState, nextState => {\n        nextState.isHotelListFetching = false;\n        nextState.hotelListEror = action.payload;\n      });\n    case actionTypes.HOTEL_LIST_RESPOSNE:\n      return produce(prevState, nextState => {\n        nextState.isHotelListFetching = false;\n        nextState.hotelListEror = '';\n        nextState.hotelListRespose = action.payload;\n      });\n    default:\n      return prevState;\n  }\n};","map":{"version":3,"names":["produce","actionTypes","initialState","isHotelListFetching","hotelListEror","hotelListRespose","commonReducer","prevState","action","type","HOTEL_LIST_REQUEST","nextState","HOTEL_LIST_FAILURE","payload","HOTEL_LIST_RESPOSNE"],"sources":["/home/shivvv/Project/workspace/roomBooking/roomBooking_client/src/reducer/common/index.ts"],"sourcesContent":["import { Reducer } from 'redux';\nimport produce from 'immer';\n\nimport * as actionTypes from '../../action/action-types/index';\nimport { HotelListAction } from '../../action';\nimport { IReducerInitialState } from '../../utils/types';\n\n\nconst initialState: IReducerInitialState = {\n  isHotelListFetching: false,\n  hotelListEror: '',\n  hotelListRespose: []\n};\n\nexport const commonReducer = (prevState: IReducerInitialState = initialState, action: HotelListAction) => {\n  switch (action.type) {\n    case actionTypes.HOTEL_LIST_REQUEST:\n      return produce(prevState, (nextState) => {\n        nextState.isHotelListFetching = true;\n        nextState.hotelListEror = ''\n      });\n\n    case actionTypes.HOTEL_LIST_FAILURE:\n      return produce(prevState, (nextState) => {\n        nextState.isHotelListFetching = false;\n        nextState.hotelListEror = action.payload;\n      });\n\n    case actionTypes.HOTEL_LIST_RESPOSNE:\n      return produce(prevState, (nextState) => {\n        nextState.isHotelListFetching = false;\n        nextState.hotelListEror = '';\n        nextState.hotelListRespose = action.payload\n      });\n    default: return prevState;\n  }\n};"],"mappings":"AACA,OAAOA,OAAO,MAAM,OAAO;AAE3B,OAAO,KAAKC,WAAW,MAAM,iCAAiC;AAK9D,MAAMC,YAAkC,GAAG;EACzCC,mBAAmB,EAAE,KAAK;EAC1BC,aAAa,EAAE,EAAE;EACjBC,gBAAgB,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACC,SAA+B,GAAGL,YAAY,EAAEM,MAAuB,KAAK;EACxG,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,WAAW,CAACS,kBAAkB;MACjC,OAAOV,OAAO,CAACO,SAAS,EAAGI,SAAS,IAAK;QACvCA,SAAS,CAACR,mBAAmB,GAAG,IAAI;QACpCQ,SAAS,CAACP,aAAa,GAAG,EAAE;MAC9B,CAAC,CAAC;IAEJ,KAAKH,WAAW,CAACW,kBAAkB;MACjC,OAAOZ,OAAO,CAACO,SAAS,EAAGI,SAAS,IAAK;QACvCA,SAAS,CAACR,mBAAmB,GAAG,KAAK;QACrCQ,SAAS,CAACP,aAAa,GAAGI,MAAM,CAACK,OAAO;MAC1C,CAAC,CAAC;IAEJ,KAAKZ,WAAW,CAACa,mBAAmB;MAClC,OAAOd,OAAO,CAACO,SAAS,EAAGI,SAAS,IAAK;QACvCA,SAAS,CAACR,mBAAmB,GAAG,KAAK;QACrCQ,SAAS,CAACP,aAAa,GAAG,EAAE;QAC5BO,SAAS,CAACN,gBAAgB,GAAGG,MAAM,CAACK,OAAO;MAC7C,CAAC,CAAC;IACJ;MAAS,OAAON,SAAS;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}