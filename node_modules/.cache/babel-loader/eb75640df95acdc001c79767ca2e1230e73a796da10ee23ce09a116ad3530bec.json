{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { commonReducer } from \"./dashboard.ts\";\nimport createSagaMiddleware from \"redux-saga\";\nexport const appReducer = combineReducers({\n  common: commonReducer\n});\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\nconst sagaMiddleWare = createSagaMiddleware();\nconst middleWare = [sagaMiddleWare];\nconst store = createStore(rootReducer, applyMiddleware(...middleWare));","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","commonReducer","createSagaMiddleware","appReducer","common","rootReducer","state","action","sagaMiddleWare","middleWare","store"],"sources":["/home/shivvv/Project/workspace/roomBooking/roomBooking_client/src/reducer/store.ts"],"sourcesContent":["import { AnyAction, applyMiddleware, combineReducers, createStore, Dispatch, Store } from \"redux\";\nimport { commonReducer } from \"./dashboard.ts\";\nimport { IStore } from \"../utils/types/index.js\";\nimport createSagaMiddleware, { SagaMiddleware } from \"redux-saga\";\n\n\nexport const appReducer = combineReducers<IStore>({\n  common: commonReducer\n});\n\nconst rootReducer = (state: IStore | undefined, action: any) => {\n  return appReducer(state, action);\n};\n\nconst sagaMiddleWare: SagaMiddleware<{}> = createSagaMiddleware();\nconst middleWare: Middleware[] = [sagaMiddleWare];\n\nconst store: Store<IStore, AnyAction> & {\n  dispatch: Dispatch<any>;\n} = createStore(rootReducer, applyMiddleware(...middleWare));\n"],"mappings":"AAAA,SAAoBA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAyB,OAAO;AACjG,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,OAAOC,oBAAoB,MAA0B,YAAY;AAGjE,OAAO,MAAMC,UAAU,GAAGJ,eAAe,CAAS;EAChDK,MAAM,EAAEH;AACV,CAAC,CAAC;AAEF,MAAMI,WAAW,GAAGA,CAACC,KAAyB,EAAEC,MAAW,KAAK;EAC9D,OAAOJ,UAAU,CAACG,KAAK,EAAEC,MAAM,CAAC;AAClC,CAAC;AAED,MAAMC,cAAkC,GAAGN,oBAAoB,CAAC,CAAC;AACjE,MAAMO,UAAwB,GAAG,CAACD,cAAc,CAAC;AAEjD,MAAME,KAEL,GAAGV,WAAW,CAACK,WAAW,EAAEP,eAAe,CAAC,GAAGW,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}