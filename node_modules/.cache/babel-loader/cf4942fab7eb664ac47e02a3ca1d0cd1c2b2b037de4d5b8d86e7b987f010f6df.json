{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport * as actionTypes from '../../action/action-types/index';\nimport { deleteBookingFailure, deleteBookingResponse, getBookingDetailsFailure, getBookingDetailsResponse, hotelListFailure, hotelListResponse } from \"../../action\";\nimport { API_ROUTES } from \"../../utils\";\nimport { apiCall } from \"../../utils/helper\";\nfunction* commonRequest(action) {\n  try {\n    var _action$payload;\n    const response = yield apiCall({\n      apiPath: API_ROUTES.hotelList.path,\n      method: API_ROUTES.hotelList.method,\n      params: action.payload ? {\n        'location': ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.location) || ''\n      } : null\n    });\n    if (response.status === 401) {\n      yield put(hotelListFailure(response.data.error));\n    } else {\n      var _response$data, _response$data2;\n      const res = (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data && ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data.length) > 0 ? response.data.data : [];\n      yield put(hotelListResponse(res));\n    }\n  } catch (error) {\n    yield put(hotelListFailure(error));\n  }\n}\nfunction* getBookingDetailsRequest() {\n  try {\n    const response = yield apiCall({\n      apiPath: API_ROUTES.getBookingDetais.path,\n      method: API_ROUTES.getBookingDetais.method\n    });\n    if (response.status === 401) {\n      yield put(getBookingDetailsFailure(response.data.error));\n    } else {\n      var _response$data3, _response$data4;\n      const res = (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.data && ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data.length) > 0 ? response.data.data : [];\n      yield put(getBookingDetailsResponse(res));\n    }\n  } catch (error) {\n    yield put(getBookingDetailsFailure(error));\n  }\n}\nfunction* deleteBookingRequest(action) {\n  try {\n    var _action$payload2;\n    const response = yield apiCall({\n      apiPath: API_ROUTES.deleteBooking.path,\n      method: API_ROUTES.deleteBooking.method,\n      params: {\n        'bookingId': (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.bookingId\n      }\n    });\n    if (response.status === 401) {\n      yield put(deleteBookingFailure(response.data.error));\n    } else {\n      var _response$data5, _response$data6;\n      const res = (_response$data5 = response.data) !== null && _response$data5 !== void 0 && _response$data5.data && ((_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.data.length) > 0 ? response.data.data : [];\n      yield put(deleteBookingResponse());\n    }\n  } catch (error) {\n    yield put(deleteBookingFailure(error));\n  }\n}\nfunction* modifyBokingRequest(action) {\n  try {\n    var _action$payload3;\n    const response = yield apiCall({\n      apiPath: API_ROUTES.deleteBooking.path,\n      method: API_ROUTES.deleteBooking.method,\n      params: {\n        'bookingId': (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.bookingId\n      }\n    });\n    if (response.status === 401) {\n      yield put(deleteBookingFailure(response.data.error));\n    } else {\n      var _response$data7, _response$data8;\n      const res = (_response$data7 = response.data) !== null && _response$data7 !== void 0 && _response$data7.data && ((_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.data.length) > 0 ? response.data.data : [];\n      yield put(deleteBookingResponse());\n    }\n  } catch (error) {\n    yield put(deleteBookingFailure(error));\n  }\n}\nexport function* commonSagaRequests() {\n  yield takeLatest(actionTypes.HOTEL_LIST_REQUEST, commonRequest);\n  yield takeLatest(actionTypes.GET_BOOKING_DETAILS_REQUEST, getBookingDetailsRequest);\n  yield takeLatest(actionTypes.MODIFY_BOOKING_REQUEST, modifyBokingRequest);\n  yield takeLatest(actionTypes.DELETE_BOOKING_REQUEST, deleteBookingRequest);\n}","map":{"version":3,"names":["put","takeLatest","actionTypes","deleteBookingFailure","deleteBookingResponse","getBookingDetailsFailure","getBookingDetailsResponse","hotelListFailure","hotelListResponse","API_ROUTES","apiCall","commonRequest","action","_action$payload","response","apiPath","hotelList","path","method","params","payload","location","status","data","error","_response$data","_response$data2","res","length","getBookingDetailsRequest","getBookingDetais","_response$data3","_response$data4","deleteBookingRequest","_action$payload2","deleteBooking","bookingId","_response$data5","_response$data6","modifyBokingRequest","_action$payload3","_response$data7","_response$data8","commonSagaRequests","HOTEL_LIST_REQUEST","GET_BOOKING_DETAILS_REQUEST","MODIFY_BOOKING_REQUEST","DELETE_BOOKING_REQUEST"],"sources":["/home/shivvv/Project/workspace/roomBooking/roomBooking_client/src/saga/common/index.ts"],"sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport * as actionTypes from '../../action/action-types/index'\nimport { deleteBookingFailure, deleteBookingResponse, getBookingDetailsFailure, getBookingDetailsResponse, hotelListFailure, hotelListResponse } from \"../../action\";\nimport { IBookingDetails, IDeleteBookingRequest, IHotelListRequest, IHotelListResponse, ISagaPayload } from \"../../utils/types\";\nimport { API_ROUTES } from \"../../utils\";\nimport { apiCall } from \"../../utils/helper\";\n\nfunction* commonRequest(action: ISagaPayload<IHotelListRequest>): any {\n  try {\n    const response = yield apiCall({\n      apiPath: API_ROUTES.hotelList.path,\n      method: API_ROUTES.hotelList.method,\n      params: action.payload ? {\n        'location': action.payload?.location || '',\n      }: null\n    });\n    if (response.status === 401) {\n      yield put(hotelListFailure(response.data.error));\n    } else {\n      const res: IHotelListResponse[] = response.data?.data && response.data?.data.length > 0 ?\n        response.data.data : [];\n      yield put(hotelListResponse(res));\n    }\n  } catch (error: any) {\n    yield put(hotelListFailure(error));\n  }\n}\n\nfunction* getBookingDetailsRequest(): any {\n  try {\n    const response = yield apiCall({\n      apiPath: API_ROUTES.getBookingDetais.path,\n      method: API_ROUTES.getBookingDetais.method\n    });\n    if (response.status === 401) {\n      yield put(getBookingDetailsFailure(response.data.error));\n    } else {\n      const res: IBookingDetails[] = response.data?.data && response.data?.data.length > 0 ?\n        response.data.data : [];\n      yield put(getBookingDetailsResponse(res));\n    }\n  } catch (error: any) {\n    yield put(getBookingDetailsFailure(error));\n  }\n}\n\nfunction* deleteBookingRequest(action: ISagaPayload<IDeleteBookingRequest>): any {\n  try {\n    const response = yield apiCall({\n      apiPath: API_ROUTES.deleteBooking.path,\n      method: API_ROUTES.deleteBooking.method,\n      params:{\n        'bookingId': action.payload?.bookingId\n      }\n    });\n    if (response.status === 401) {\n      yield put(deleteBookingFailure(response.data.error));\n    } else {\n      const res: IBookingDetails[] = response.data?.data && response.data?.data.length > 0 ?\n        response.data.data : [];\n      yield put(deleteBookingResponse());\n    }\n  } catch (error: any) {\n    yield put(deleteBookingFailure(error));\n  }\n}\n\nfunction* modifyBokingRequest(action: ISagaPayload<IDeleteBookingRequest>): any {\n  try {\n    const response = yield apiCall({\n      apiPath: API_ROUTES.deleteBooking.path,\n      method: API_ROUTES.deleteBooking.method,\n      params:{\n        'bookingId': action.payload?.bookingId\n      }\n    });\n    if (response.status === 401) {\n      yield put(deleteBookingFailure(response.data.error));\n    } else {\n      const res: IBookingDetails[] = response.data?.data && response.data?.data.length > 0 ?\n        response.data.data : [];\n      yield put(deleteBookingResponse());\n    }\n  } catch (error: any) {\n    yield put(deleteBookingFailure(error));\n  }\n}\n\nexport function* commonSagaRequests() {\n  yield takeLatest(actionTypes.HOTEL_LIST_REQUEST, commonRequest);\n  yield takeLatest(actionTypes.GET_BOOKING_DETAILS_REQUEST, getBookingDetailsRequest );\n  yield takeLatest(actionTypes.MODIFY_BOOKING_REQUEST, modifyBokingRequest );\n  yield takeLatest(actionTypes.DELETE_BOOKING_REQUEST, deleteBookingRequest );\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}