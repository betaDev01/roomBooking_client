{"ast":null,"code":"import produce from 'immer';\nimport * as actionTypes from 'actions/action-types';\nconst initialState = {\n  activeLeaderboardTab: 'locations'\n};\nexport const leaderboardReducer = (prevState = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ACTIVE_LEADERBOARD_TAB:\n      return produce(prevState, nextState => {\n        nextState.activeLeaderboardTab = action.payload;\n      });\n    default:\n      return prevState;\n  }\n};","map":{"version":3,"names":["produce","actionTypes","initialState","activeLeaderboardTab","leaderboardReducer","prevState","action","type","ACTIVE_LEADERBOARD_TAB","nextState","payload"],"sources":["/home/shivvv/Project/workspace/roomBooking/roomBooking_client/src/reducer/dashboard.ts/index.ts"],"sourcesContent":["import { Reducer } from 'redux';\nimport produce from 'immer';\n\nimport { LeaderboardAction } from 'actions/leaderboard';\nimport { ILeaderboard } from 'types';\nimport * as actionTypes from 'actions/action-types';\n\n\nconst initialState = {\n  activeLeaderboardTab: 'locations'\n};\n\nexport const leaderboardReducer: Reducer<ILeaderboard, LeaderboardAction> = (prevState: ILeaderboard = initialState, action: LeaderboardAction) => {\n  switch (action.type) {\n    case actionTypes.ACTIVE_LEADERBOARD_TAB:\n      return produce(prevState, (nextState) => {\n        nextState.activeLeaderboardTab = action.payload;\n      });\n    default: return prevState;\n  }\n};"],"mappings":"AACA,OAAOA,OAAO,MAAM,OAAO;AAI3B,OAAO,KAAKC,WAAW,MAAM,sBAAsB;AAGnD,MAAMC,YAAY,GAAG;EACnBC,oBAAoB,EAAE;AACxB,CAAC;AAED,OAAO,MAAMC,kBAA4D,GAAGA,CAACC,SAAuB,GAAGH,YAAY,EAAEI,MAAyB,KAAK;EACjJ,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACO,sBAAsB;MACrC,OAAOR,OAAO,CAACK,SAAS,EAAGI,SAAS,IAAK;QACvCA,SAAS,CAACN,oBAAoB,GAAGG,MAAM,CAACI,OAAO;MACjD,CAAC,CAAC;IACJ;MAAS,OAAOL,SAAS;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}